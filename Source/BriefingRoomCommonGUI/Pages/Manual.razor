@page "/Manual"
@using Markdig
@using System.Reflection
@using BriefingRoom4DCS
@using System.IO

<div class="title-bar">
  <h1>@BriefingRoom.Translate("Manual")</h1>
</div>
<div>
  <ul class="nav nav-tabs">
    @foreach (var value in Documents.Keys.OrderBy(x => x).Reverse().ToList())
    {
      <li class="nav-item">
        <a class="nav-link @(DocTab == value ? "active" : "")" aria-current="page" @onclick="() => SetDocTab(value)">
          @value
        </a>
      </li>
    }
  </ul>
  <br />
  @foreach (var key in Documents.Keys.ToList())
  {
    @if (DocTab == key)
    {
      @((MarkupString) @Documents[key])
    }
  }
</div>

@code {

  private string DocTab = "User Manual";
  private void SetDocTab(string var)
  {
    DocTab = var;
  }
  private Dictionary<string, string> Documents { get; set; }

  protected override void OnInitialized()
  {
    var pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();
    var sourcePath = Path.Combine(BriefingRoom.GetBriefingRoomMarkdownPath(), "Manuals");
    var files = Directory.GetFiles(sourcePath, "*.md");
    Documents = files.ToDictionary(x => x.Replace(sourcePath, "").Replace(".md", "").Replace("_", " ").Replace("\\", "").Replace("/", ""), x =>
    Markdown.ToHtml(File.ReadAllText(x).Replace("Media/SplashScreen.png",
    "_content/BriefingRoomCommonGUI/img/br-logo-white.png"), pipeline));
  }
}
